{"ast":null,"code":"import{COLORS,SPECIAL}from'../const';export default function parseText(str){var htmlResult=str;var matchColors=/~([\\s\\S]+?)~/gi;var match=htmlResult.match(matchColors);if(match!==null){for(var i=0;i<match.length;i++){var nowColor=match[i].slice(1,-1);var clr=COLORS[nowColor];if(clr){htmlResult=htmlResult.replace(match[i],'<span style=\"color: '+clr+'\">');}else{var specChar=match[i].slice(1,-1);var special=SPECIAL[specChar];htmlResult=htmlResult.replace(match[i],special);}}}return htmlResult;}","map":{"version":3,"sources":["C:/Users/Skaidrius/Downloads/ragemppro_dednet/STATE-RAGE-UI-master-fixed/src/components/hud/components/MainMenu/functions/parseText.js"],"names":["COLORS","SPECIAL","parseText","str","htmlResult","matchColors","match","i","length","nowColor","slice","clr","replace","specChar","special"],"mappings":"AAAA,OAASA,MAAT,CAAiBC,OAAjB,KAAgC,UAAhC,CAEA,cAAe,SAASC,CAAAA,SAAT,CAAmBC,GAAnB,CAAwB,CACnC,GAAIC,CAAAA,UAAU,CAAGD,GAAjB,CACA,GAAME,CAAAA,WAAW,CAAG,gBAApB,CACA,GAAMC,CAAAA,KAAK,CAAGF,UAAU,CAACE,KAAX,CAAiBD,WAAjB,CAAd,CACA,GAAIC,KAAK,GAAK,IAAd,CAAoB,CAChB,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,KAAK,CAACE,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACnC,GAAME,CAAAA,QAAQ,CAAGH,KAAK,CAACC,CAAD,CAAL,CAASG,KAAT,CAAe,CAAf,CAAkB,CAAC,CAAnB,CAAjB,CACA,GAAIC,CAAAA,GAAG,CAAGX,MAAM,CAACS,QAAD,CAAhB,CACA,GAAIE,GAAJ,CAAS,CACLP,UAAU,CAAGA,UAAU,CAACQ,OAAX,CAAmBN,KAAK,CAACC,CAAD,CAAxB,CAA6B,uBAAyBI,GAAzB,CAA+B,IAA5D,CAAb,CACH,CAFD,IAEQ,CACJ,GAAME,CAAAA,QAAQ,CAAGP,KAAK,CAACC,CAAD,CAAL,CAASG,KAAT,CAAe,CAAf,CAAkB,CAAC,CAAnB,CAAjB,CACA,GAAII,CAAAA,OAAO,CAAGb,OAAO,CAACY,QAAD,CAArB,CACAT,UAAU,CAAGA,UAAU,CAACQ,OAAX,CAAmBN,KAAK,CAACC,CAAD,CAAxB,CAA6BO,OAA7B,CAAb,CACH,CACJ,CACJ,CACD,MAAOV,CAAAA,UAAP,CACH","sourcesContent":["import { COLORS, SPECIAL } from '../const'\n\nexport default function parseText(str) {\n    let htmlResult = str\n    const matchColors = /~([\\s\\S]+?)~/gi\n    const match = htmlResult.match(matchColors)\n    if (match !== null) {\n        for (let i = 0; i < match.length; i++) {\n            const nowColor = match[i].slice(1, -1)\n            let clr = COLORS[nowColor]\n            if (clr) {\n                htmlResult = htmlResult.replace(match[i], '<span style=\"color: ' + clr + '\">')\n            } else  {\n                const specChar = match[i].slice(1, -1)\n                let special = SPECIAL[specChar]\n                htmlResult = htmlResult.replace(match[i], special)\n            }\n        }\n    }\n    return htmlResult\n}"]},"metadata":{},"sourceType":"module"}