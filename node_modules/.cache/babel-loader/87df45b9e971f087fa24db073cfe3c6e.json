{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Skaidrius\\\\Downloads\\\\ragemppro_dednet\\\\STATE-RAGE-UI-master-fixed\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import'../css/quests.css';import Button from'../uikit/Button';import{useState}from'react';import Quest from'../uikit/Quest';import ButtonOver from'../uikit/ButtonOver';import ButtonDone from'../uikit/ButtonDone';import QuestMenu from'../uikit/QuestMenu';var Quests=function Quests(_ref){var quests=_ref.quests;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),active=_useState2[0],_setActive=_useState2[1];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__item accountmenu__scrollable\"},/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__container__info\"},/*#__PURE__*/React.createElement(\"span\",{className:\"accountmenu__content__cards__header__name\"},\"U\\u017Eduotys\"),/*#__PURE__*/React.createElement(\"span\",{className:\"accountmenu__content__cards__title\"},\"Prad\\u0117kite vykdyti u\\u017Eduotis ir gaukite apdovanojimus\")),/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__cards__question__container\"},quests.map(function(item,index){return/*#__PURE__*/React.createElement(QuestMenu,{title:item.title,subtitle:item.subtitle,key:index.toString(),index:index,active:active,setActive:function setActive(){return _setActive(index);},done:item.done});})))),/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__blitem accountmenu__scrollable\"},/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__questinfo__container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__questinfo__img_contain\"},/*#__PURE__*/React.createElement(\"img\",{src:'https://revolutionrp.lt/client/images/mmenu/all/quest-bg.png',className:\"accountmenu__content__cards__questinfo__img__container\",alt:\"\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__questinfo__header\"},/*#__PURE__*/React.createElement(\"span\",{className:\"accountmenu__content__cards__questinfo__header__name\"},quests[active].title),/*#__PURE__*/React.createElement(\"span\",{className:\"accountmenu__content__cards__questinfo__header__count\"},quests[active].subtitle)),/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__questinfo__list\"},quests[active].tasks.map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__questinfo__list__item\",key:index.toString()+quests[active].title},/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__questinfo__list__item__info\"},/*#__PURE__*/React.createElement(\"span\",{className:\"accountmenu__content__cards__questinfo__item__name\"},\"\".concat(item.title)),/*#__PURE__*/React.createElement(\"span\",{className:\"accountmenu__content__cards__questinfo__item__info\"},item.text),/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__questinfo__item__btmdata\"},/*#__PURE__*/React.createElement(\"span\",{className:\"accountmenu__content__cards__questinfo__item__reward\"},\"Apdovanojimas: \".concat(item.reward)))),item.complete===2?/*#__PURE__*/React.createElement(ButtonOver,{text:\"N\\u0117ra\"}):item.complete===1?/*#__PURE__*/React.createElement(Button,{onPress:function onPress(){try{mp.trigger('client:mainMenu:sendPos',item.x,item.y);// eslint-disable-line\n}catch(e){}},text:\"Nutiesti keli\\u0105\"}):/*#__PURE__*/React.createElement(ButtonDone,{text:\"U\\u017Ebaigta\"}));})))));};export default Quests;","map":{"version":3,"sources":["C:/Users/Skaidrius/Downloads/ragemppro_dednet/STATE-RAGE-UI-master-fixed/src/components/accountmenu/components/Quests.jsx"],"names":["React","Button","useState","Quest","ButtonOver","ButtonDone","QuestMenu","Quests","quests","active","setActive","map","item","index","title","subtitle","toString","done","tasks","text","reward","complete","mp","trigger","x","y","e"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../css/quests.css'\nimport Button from '../uikit/Button'\nimport { useState } from 'react'\nimport Quest from '../uikit/Quest'\nimport ButtonOver from '../uikit/ButtonOver'\nimport ButtonDone from '../uikit/ButtonDone'\nimport QuestMenu from '../uikit/QuestMenu'\n\nconst Quests = ({ quests }) => {\n\n    const [active, setActive] = useState(0)\n\n    return (\n        <React.Fragment>\n            <div className=\"accountmenu__content__cards__item accountmenu__scrollable\">\n                <div className=\"accountmenu__content__cards__container\">\n                    <div className=\"accountmenu__content__cards__container__info\">\n                        <span className=\"accountmenu__content__cards__header__name\">\n                            Užduotys\n                        </span>\n                        <span className=\"accountmenu__content__cards__title\">\n                            Pradėkite vykdyti užduotis ir gaukite apdovanojimus\n                        </span>\n                    </div>\n                    <div className=\"accountmenu__cards__question__container\">\n                        {quests.map((item, index) => (\n                            <QuestMenu\n                                title={item.title}\n                                subtitle={item.subtitle}\n                                key={index.toString()}\n                                index={index}\n                                active={active}\n                                setActive={() => setActive(index)}\n                                done={item.done}\n                            />\n                        ))}\n                    </div>\n                </div>\n            </div>\n            <div className=\"accountmenu__content__cards__blitem accountmenu__scrollable\">\n                <div className=\"accountmenu__content__cards__questinfo__container\">\n                    <div className=\"accountmenu__content__cards__questinfo__img_contain\">\n                        <img src={'https://revolutionrp.lt/client/images/mmenu/all/quest-bg.png'} className=\"accountmenu__content__cards__questinfo__img__container\" alt=\"\" />\n                    </div>\n                    <div className=\"accountmenu__content__cards__questinfo__header\">\n                        <span className=\"accountmenu__content__cards__questinfo__header__name\">\n                            {quests[active].title}\n                        </span>\n                        <span className=\"accountmenu__content__cards__questinfo__header__count\">\n                            {quests[active].subtitle}\n                        </span>\n                    </div>\n                    <div className=\"accountmenu__content__cards__questinfo__list\">\n                        {quests[active].tasks.map((item, index) => (\n                            <div className=\"accountmenu__content__cards__questinfo__list__item\" key={index.toString() + quests[active].title}>\n                                <div className=\"accountmenu__content__cards__questinfo__list__item__info\">\n                                    <span className=\"accountmenu__content__cards__questinfo__item__name\">{`${item.title}`}</span>\n                                    <span className=\"accountmenu__content__cards__questinfo__item__info\">{item.text}</span>\n                                    <div className=\"accountmenu__content__cards__questinfo__item__btmdata\">\n                                        <span className=\"accountmenu__content__cards__questinfo__item__reward\">{`Apdovanojimas: ${item.reward}`}</span>\n                                        \n                                    </div>\n                                </div>\n                                {item.complete === 2 ? <ButtonOver text=\"Nėra\" /> : item.complete === 1 ? <Button onPress={() => {\n                                        try {\n                                            mp.trigger('client:mainMenu:sendPos', item.x, item.y); // eslint-disable-line\n                                        }\n                                        catch (e) {}\n                                    }} text=\"Nutiesti kelią\" /> : <ButtonDone text=\"Užbaigta\" />}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Quests"]},"metadata":{},"sourceType":"module"}