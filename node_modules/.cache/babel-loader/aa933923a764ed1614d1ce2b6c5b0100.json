{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Skaidrius\\\\Downloads\\\\ragemppro_dednet\\\\STATE-RAGE-UI-master-fixed\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\Skaidrius\\\\Downloads\\\\ragemppro_dednet\\\\STATE-RAGE-UI-master-fixed\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import'../css/settings.css';import{useState}from'react';import SettingsItem from'../uikit/SettingsItem';var Settings=function Settings(_ref){var data=_ref.data,activeData=_ref.activeData;var _useState=useState(activeData),_useState2=_slicedToArray(_useState,2),active=_useState2[0],setActive=_useState2[1];var _useState3=useState(data),_useState4=_slicedToArray(_useState3,2),settings=_useState4[0],setSettings=_useState4[1];var updateCheckbox=function updateCheckbox(index){var newSettings=_toConsumableArray(settings);newSettings[active].settings[index].active=newSettings[active].settings[index].active===0?1:0;setSettings(newSettings);try{mp.trigger('client:mainMenu:settings:updateCheckbox',newSettings[active].settings[index].params,newSettings[active].settings[index].active);// eslint-disable-line\n}catch(e){}};var _nextVal=function nextVal(index){var newSettings=_toConsumableArray(settings);newSettings[active].settings[index].active=newSettings[active].settings[index].listmenu.length===newSettings[active].settings[index].active+1?0:newSettings[active].settings[index].active+1;setSettings(newSettings);try{mp.trigger('client:mainMenu:settings:updateList',newSettings[active].settings[index].params,newSettings[active].settings[index].active);// eslint-disable-line\n}catch(e){}};var _prevVal=function prevVal(index){var newSettings=_toConsumableArray(settings);newSettings[active].settings[index].active=newSettings[active].settings[index].active===0?newSettings[active].settings[index].listmenu.length-1:newSettings[active].settings[index].active-1;setSettings(newSettings);try{mp.trigger('client:mainMenu:settings:updateList',newSettings[active].settings[index].params,newSettings[active].settings[index].active);// eslint-disable-line\n}catch(e){}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__item accountmenu__scrollable\"},/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__settings__container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"accountmenu__content__cards__settings__header__type\"},\"\\u041E\\u0431\\u0449\\u0438\\u0435\"),/*#__PURE__*/React.createElement(\"span\",{className:\"accountmenu__content__cards__settings__header__name\"},\"\\u0418\\u0433\\u0440\\u0430\"),/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__settings__list\"},settings.map(function(item,index){return/*#__PURE__*/React.createElement(\"span\",{className:index===active?\"accountmenu__content__cards__settings__list__item_selected\":\"accountmenu__content__cards__settings__list__item\",onClick:function onClick(){return setActive(index);},key:index.toString()+'_settingslist'},item.name);})))),/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__blitem accountmenu__scrollable\"},/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__content__cards__settings__container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"accountmenu__content__cards__settings__bcontainer__name\"},settings[active].name),/*#__PURE__*/React.createElement(\"span\",{className:\"accountmenu__content__cards__settings__bcontainer__desc\"},settings[active].desc),/*#__PURE__*/React.createElement(\"div\",{className:\"accountmenu__hr\",style:{marginTop:'15px',marginBottom:'15px'}}),settings[active].settings.map(function(item,index){return/*#__PURE__*/React.createElement(SettingsItem,{name:item.name,key:index.toString()+item.name,type:item.type,active:item.active,index:index,setCheckbox:function setCheckbox(){return updateCheckbox(index);},listmenu:item.listmenu?item.listmenu[item.active]:[],nextVal:function nextVal(){return _nextVal(index);},prevVal:function prevVal(){return _prevVal(index);},params:item.params,btntext:item.btntext});}))));};export default Settings;","map":{"version":3,"sources":["C:/Users/Skaidrius/Downloads/ragemppro_dednet/STATE-RAGE-UI-master-fixed/src/components/accountmenu/components/Settings.jsx"],"names":["React","useState","SettingsItem","Settings","data","activeData","active","setActive","settings","setSettings","updateCheckbox","index","newSettings","mp","trigger","params","e","nextVal","listmenu","length","prevVal","map","item","toString","name","desc","marginTop","marginBottom","type","btntext"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../css/settings.css'\nimport { useState } from 'react'\nimport SettingsItem from '../uikit/SettingsItem'\n\nconst Settings = ({ data, activeData }) => {\n\n    const [active, setActive] = useState(activeData)\n    const [settings, setSettings] = useState(data);\n\n    const updateCheckbox = (index) => {\n        let newSettings = [...settings]\n        newSettings[active].settings[index].active = newSettings[active].settings[index].active === 0 ? 1 : 0\n        setSettings(newSettings)\n\n        try {\n            mp.trigger('client:mainMenu:settings:updateCheckbox', newSettings[active].settings[index].params, newSettings[active].settings[index].active); // eslint-disable-line\n        }\n        catch (e) {}\n    }\n\n    const nextVal = (index) => {\n        let newSettings = [...settings]\n        newSettings[active].settings[index].active = newSettings[active].settings[index].listmenu.length  === newSettings[active].settings[index].active + 1 ? 0 : newSettings[active].settings[index].active + 1\n        setSettings(newSettings)\n\n        try {\n            mp.trigger('client:mainMenu:settings:updateList', newSettings[active].settings[index].params, newSettings[active].settings[index].active); // eslint-disable-line\n        }\n        catch (e) {}\n    }\n\n    const prevVal = (index) => {\n        let newSettings = [...settings]\n        newSettings[active].settings[index].active = newSettings[active].settings[index].active  === 0 ? newSettings[active].settings[index].listmenu.length - 1 : newSettings[active].settings[index].active - 1\n        setSettings(newSettings)\n\n        try {\n            mp.trigger('client:mainMenu:settings:updateList', newSettings[active].settings[index].params, newSettings[active].settings[index].active); // eslint-disable-line\n        }\n        catch (e) {}\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"accountmenu__content__cards__item accountmenu__scrollable\">\n                <div className=\"accountmenu__content__cards__settings__container\">\n                    <span className=\"accountmenu__content__cards__settings__header__type\">Общие</span>\n                    <span className=\"accountmenu__content__cards__settings__header__name\">Игра</span>\n                    <div className=\"accountmenu__content__cards__settings__list\">\n                        {settings.map((item, index) => (\n                            <span\n                                className={index === active ? \"accountmenu__content__cards__settings__list__item_selected\" : \"accountmenu__content__cards__settings__list__item\"}\n                                onClick={() => setActive(index)}\n                                key={index.toString() + '_settingslist'}\n                            >\n                                {item.name}\n                            </span>\n                        ))}\n                    </div>\n                </div>\n            </div>\n            <div className=\"accountmenu__content__cards__blitem accountmenu__scrollable\">\n                <div className=\"accountmenu__content__cards__settings__container\">\n                    <span className=\"accountmenu__content__cards__settings__bcontainer__name\">{settings[active].name}</span>\n                    <span className=\"accountmenu__content__cards__settings__bcontainer__desc\">{settings[active].desc}</span>\n                    <div className=\"accountmenu__hr\" style={{marginTop: '15px', marginBottom: '15px'}} />\n                    {settings[active].settings.map((item, index) => (\n                        <SettingsItem\n                            name={item.name}\n                            key={index.toString() + item.name}\n                            type={item.type}\n                            active={item.active}\n                            index={index}\n                            setCheckbox={() => updateCheckbox(index)}\n                            listmenu={item.listmenu ? item.listmenu[item.active] : []}\n                            nextVal={() => nextVal(index)}\n                            prevVal={() => prevVal(index)}\n                            params={item.params}\n                            btntext={item.btntext}\n                        />\n                    ))}\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Settings"]},"metadata":{},"sourceType":"module"}